{{- define "networkpolicy.renderPorts" -}}
{{- if . }}
{{- range . }}
- port: {{ (splitn "/" 2 .)._0 }}
  protocol: {{ if contains "/" . }}{{ upper ((splitn "/" 2 .)._1) }}{{ else }}TCP{{ end }}
{{- end }}
{{- else }}
[]
{{- end }}
{{- end }}

{{- define "networkpolicy.ingressPorts" -}}
{{- $ := index . 0 }}
{{- with index . 1 }}
{{- if .ports }}
{{- include "networkpolicy.renderPorts" .ports }}
{{- else }}
- port: {{ $.Values.service.containerPort | default $.Values.service.port }}
  protocol: TCP
{{- end }}
{{- end }}
{{- end }}

{{- define "microservice.tpl.networkpolicy" -}}
{{- if .Values.networkPolicy.enabled }}
{{- $fullName := include "microservice.fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "microservice.labels" (dict "context" $ "component" "app") | nindent 4 }}
    {{- include "helpers.datadog-service-labels" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "microservice.selectorLabels" (dict "context" $ "component" "app") | nindent 6 }}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    {{- if .Values.ingressroute.enabled }}
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: traefik
      ports:
        {{- include "networkpolicy.ingressPorts" (list $ (dict "ports" (list))) | indent 8 }}
    {{- end }}
    {{- if .Values.networkPolicy.ingressAllowCluster.enabled }}
    - from:
        - podSelector: {}
          namespaceSelector: {}
      ports:
        {{- include "networkpolicy.ingressPorts" (list $ .Values.networkPolicy.ingressAllowCluster) | indent 8 }}
    {{- end }}
    {{- if .Values.networkPolicy.ingressAllowSameNamespace.enabled }}
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{ .Release.Namespace }}
      ports:
        {{- include "networkpolicy.ingressPorts" (list $ .Values.networkPolicy.ingressAllowSameNamespace) | indent 8 }}
    {{- end }}
    {{- range concat .Values.networkPolicy.ingressAllowRules .Values.networkPolicy.ingressAllowRulesExtra }}
    - from:
        {{- if .cidr }}
        - ipBlock:
            cidr: {{ .cidr }}
        {{- else }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{ .namespace | default $.Release.Namespace }}
          {{- with (omit . "ports" "namespace" "cidr") }}
          podSelector:
            matchLabels:
              {{- range $key, $value := . }}
              {{ $key }}: {{ $value | quote }}
              {{- end }}
          {{- end }}
        {{- end }}
      ports:
        {{- include "networkpolicy.ingressPorts" (list $ .) | indent 8 }}
    {{- end }}
    {{- if .Values.ingressExtra }}
    {{- toYaml .Values.ingressExtra | indent 4 }}
    {{- end }}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    {{- if .Values.networkPolicy.egressAllowInternet.enabled }}
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        {{- include "networkpolicy.renderPorts" .Values.networkPolicy.egressAllowInternet.ports | indent 8 }}
    {{- end }}
    {{- if .Values.networkPolicy.egressAllowCluster.enabled }}
    - to:
        - podSelector: {}
          namespaceSelector: {}
      {{- if .Values.networkPolicy.egressAllowCluster.ports }}
      ports:
        {{- include "networkpolicy.renderPorts" .Values.networkPolicy.egressAllowCluster.ports | indent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.networkPolicy.egressAllowSameNamespace.enabled }}
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: {{ .Release.Namespace }}
      ports:
        {{- include "networkpolicy.renderPorts" .Values.networkPolicy.egressAllowSameNamespace.ports | indent 8 }}
    {{- end }}
    {{- range concat .Values.networkPolicy.egressAllowRules .Values.networkPolicy.egressAllowRulesExtra }}
    - to:
        {{- if .cidr }}
        - ipBlock:
            cidr: {{ .cidr }}
        {{- else }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{ .namespace | default $.Release.Namespace }}
          {{- with (omit . "ports" "namespace" "cidr") }}
          podSelector:
            matchLabels:
              {{- range $key, $value := . }}
              {{ $key }}: {{ $value | quote }}
              {{- end }}
          {{- end }}
        {{- end }}
      {{- if .ports }}
      ports:
        {{- include "networkpolicy.renderPorts" .ports | indent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.egressExtra }}
    {{- toYaml .Values.egressExtra | indent 4 }}
    {{- end }}
{{- if .Values.networkPolicy.egressAllowFqdn }}
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: {{ $fullName }}-fqdn-egress
  labels:
    {{- include "microservice.labels" (dict "context" $ "component" "app") | nindent 4 }}
spec:
  endpointSelector:
    matchLabels:
      {{- include "microservice.selectorLabels" (dict "context" $ "component" "app") | nindent 6 }}
  egress:
    {{- range .Values.networkPolicy.egressAllowFqdn }}
    - toFQDNs:
        - matchName: {{ .fqdn | quote }}
      {{- with .ports }}
      toPorts:
        - ports:
            {{- include "networkpolicy.renderPorts" . | indent 12 }}
      {{- end }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}