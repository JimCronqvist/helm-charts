{{- define "microservice.tpl.pvc" -}}
{{- if or (eq .Values.deployment.kind "Deployment") (gt (len .Values.cronjobs) 0) (gt (len .Values.jobs) 0) }}
{{- $global := .Values.global -}}

{{/* Main PVCs */}}
{{- range $pvcName, $pvc := .Values.pvc }}
{{- if and (dig "enabled" true $pvc) (not $pvc.existingClaim) (not $pvc.hostPath) (not $pvc.emptyDir) (or (not $pvc.nfs) $pvc.nfs.mountOptions) }}
  {{- $createPvc := 0 }}
  {{- if and (eq $.Values.deployment.kind "Deployment") (dig "enabled" true $.Values.deployment) (dig "mountToDeployment" true $pvc) }}
    {{- $createPvc = 1 }}
  {{- else if and (gt (len $.Values.cronjobs) 0) (dig "mountToCronJob" true $pvc) }}
    {{- $createPvc = 2 }}
  {{- else if and (gt (len $.Values.jobs) 0) (dig "mountToJob" true $pvc) }}
    {{- $createPvc = 3 }}
  {{- end }}
# Create PVC code: {{ $createPvc }}{{- printf "\n" }}
  {{- if gt $createPvc 0 }}
    {{- include "microservice.render-pvc" (dict "pvcName" $pvcName "pvc" $pvc "global" $global "context" $ ) }}
---
  {{- end }}
{{- end }}
{{- end }}

{{/* CronJob PVCs .Values.cronjobs.<name>.pvc */}}
{{- range $cronjob := .Values.cronjobs }}
  {{- range $pvcName, $pvc := $cronjob.pvc }}
  {{- if and (dig "enabled" true $pvc) (not $pvc.existingClaim) (not $pvc.hostPath) (not $pvc.emptyDir) (or (not $pvc.nfs) $pvc.nfs.mountOptions) }}
    {{- include "microservice.render-pvc" (dict "pvcName" (printf "%s-%s" ($cronjob.name | replace " " "-" | lower) $pvcName) "pvc" $pvc "global" $global "context" $ ) }}
---
  {{- end }}
  {{- end }}
{{- end }}

{{/* Job PVCs .Values.jobs.<name>.pvc */}}
{{- range $job := .Values.jobs }}
  {{- range $pvcName, $pvc := $job.pvc }}
  {{- if and (dig "enabled" true $pvc) (not $pvc.existingClaim) (not $pvc.hostPath) (not $pvc.emptyDir) (or (not $pvc.nfs) $pvc.nfs.mountOptions) }}
    {{- include "microservice.render-pvc" (dict "pvcName" (printf "%s-%s" ($job.name | replace " " "-" | lower) $pvcName) "pvc" $pvc "global" $global "context" $ ) }}
---
  {{- end }}
  {{- end }}
{{- end }}

{{- end }}
{{- end }}
