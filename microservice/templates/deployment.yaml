{{- if and .Values.deployment (dig "enabled" true .Values.deployment) }}
{{- $fullName := include "microservice.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "microservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "microservice.selectorLabels" . | nindent 6 }}
  {{- if and .Values.strategy .Values.strategy.type }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if and .Values.strategy.rollingUpdate (eq .Values.strategy.type "RollingUpdate") }}
    rollingUpdate:
      {{- .Values.strategy.rollingUpdate | toYaml | nindent 6 }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- include "microservice.checksumPodAnnotations" . | indent 8 }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "microservice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "microservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "helpers.image-tag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "helpers.list-env-variables" . | indent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if and .Values.service.enabled .Values.probes .Values.probes.livenessPath }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessPath }}
              port: http
          {{- end }}
          {{- if and .Values.service.enabled .Values.probes .Values.probes.readinessPath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessPath }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.pvc }}
          volumeMounts:
            {{- include "helpers.volume-mounts" . | indent 12 }}
          {{- end }}
      {{- with .Values.pvc }}
      volumes:
        {{- include "helpers.volumes" (list $ .) | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
