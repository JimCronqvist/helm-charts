{{- define "microservice.tpl.service" -}}
{{- if and .Values.service (dig "enabled" true .Values.service) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "microservice.fullname" . }}
  labels:
    {{- include "microservice.labels" (dict "context" $ "component" "app") | nindent 4 }}
  annotations:
    {{- with .Values.service.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "helpers.tailscale-annotations" . | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  {{- if list "LoadBalancer" "NodePort" | has .Values.service.type }}
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | default "Cluster" }}
  {{- end }}
  ports:
    - port: {{ .Values.service.port }}
      {{- if .Values.service.appProtocol }}
      appProtocol: {{ .Values.service.appProtocol }}
      {{- end }}
      targetPort: {{ .Values.service.name }}
      protocol: TCP
      name: {{ .Values.service.name }}
    {{- with .Values.service.extraPorts }}
    {{- range $extra := . }}
    {{- if $extra.portRange }}
    {{- range until (sub $extra.portRange.end $extra.portRange.start | add1 | int) }}
    {{- $port := add $extra.portRange.start . }}
    - name: {{ $extra.name }}-{{ $port }}
      protocol: TCP
      port: {{ $port }}
      {{- if $extra.appProtocol }}
      appProtocol: {{ $extra.appProtocol }}
      {{- end }}
    {{- end }}
    {{- else }}
    - name: {{ $extra.name }}
      protocol: TCP
      port: {{ $extra.port }}
      {{- if $extra.appProtocol }}
      appProtocol: {{ $extra.appProtocol }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
  selector:
    {{- include "microservice.selectorLabels" (dict "context" $ "component" "app") | nindent 4 }}
{{- end }}
{{- end }}
