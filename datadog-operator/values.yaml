datadog-operator:
  enabled: true
  installCRDs: true
  datadogMonitor:
    enabled: true

  image:
    repository: datadog/operator

  # Set Datadog Operator log level: debug, info (default), error, panic, fatal
  logLevel: "info"

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

  podLabels:
    tags.datadoghq.com/service: datadog-operator

  # Intake site
  site: datadoghq.eu

  # Datadog credentials secret name
  appKeyExistingSecret: datadog-secret
  apiKeyExistingSecret: datadog-secret

  watchNamespaces:
    - datadog
    - monitoring

secrets:
  secrets:
    # Your DataDog credentials - Application Key & API Key
    # Note: If you update these, you will need to restart the deployments, as the secret is not automatically reloaded.
    datadog-secret:
      # Generate an Application Key here: https://app.datadoghq.eu/organization-settings/application-keys
      app-key:
      # Generate an API Key here: https://app.datadoghq.eu/organization-settings/api-keys
      api-key:


datadogAgent:
  clusterName:
  site: datadoghq.eu

  # Configuration options available here:
  # https://github.com/DataDog/datadog-operator/blob/main/docs/configuration.v2alpha1.md
  global:
    # Use docker.io as the default image registry
    registry: datadog
  override:
    nodeAgent:
      priorityClassName: "system-node-critical"
      # Allow to schedule on tainted nodes
      tolerations:
        # Tolerate standard Kubernetes node condition taints, but not 'node.kubernetes.io/unschedulable' or 'node.cilium.io/agent-not-ready'.
        # This ensures that the node is ready from a Karpenter and CNI perspective first
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          #tolerationSeconds: 300
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          #tolerationSeconds: 300
        - key: node.kubernetes.io/disk-pressure
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/memory-pressure
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/pid-pressure
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/network-unavailable
          operator: Exists
          effect: NoSchedule
      # Do not try to schedule on fargate nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      extraConfd:
        configMap:
          name: datadog-agent-confd-config
      extraChecksd:
        configMap:
          name: datadog-agent-checksd-config
    clusterAgent:
      containers:
        cluster-agent:
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 200m
              memory: 200Mi

  features:
    #admissionController:
    #  enabled: true
    apm:
      enabled: true
    #clusterChecks:
    #  enabled: true
    #cspm:
    #  enabled: false
    #cws:
    #  enabled: false
    #ebpfCheck:
    #  enabled: false
    #externalMetricsServer:
    #  enabled: false
    #kubeStateMetricsCore:
    #  enabled: true
    #liveContainerCollection:
    #  enabled: true
    liveProcessCollection:
      enabled: true
    logCollection:
      enabled: true
      containerCollectAll: true
    npm:
      enabled: false
    #oomKill:
    #  enabled: false
    #orchestratorExplorer:
    #  enabled: true
    #prometheusScrape:
    #  enabled: false
    #tcpQueueLength:
    #  enabled: false
    #usm:
    #  enabled: false
    otlp:
      receiver:
        protocols:
          grpc:
            enabled: false
            endpoint: 0.0.0.0:4317
          http:
            enabled: false
            endpoint: 0.0.0.0:4318



  # Add custom checks that is run from the agent on each node
  # https://docs.datadoghq.com/developers/custom_checks/write_agent_check/
  customChecks:
    hello:
      enabled: true
      cmd: "ls | wc -l "
