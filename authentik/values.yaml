ingressroute:
  enabled: false
  # Override the host for all routes defined routes, example: auth.example.com
  overrideHost: ""
  routes:
    - path: /
      host: authentik
      serviceName: authentik
      servicePort: 80

authentik:
  # First time access: go to path "/if/flow/initial-setup/" to create the first default user.
  service:
    annotations: {}
      #tailscale.com/expose: "true"

  authentik:
    # Generate a 50 character key, do not change after the initial install:  tr -dc A-Za-z0-9 </dev/urandom | head -c 50
    secret_key: ""
    postgresql:
      #host: ""
      name: "authentik"
      user: "authentik"
      password: ""
      port: 5432
    redis:
      #host: ""
      password: ""

  ingress:
    enabled: false

  postgresql:
    enabled: false
    #host: ""
    postgresqlPassword: ""

  # Warning! The redis chart is not up-to-date from Authentik. Consider using an external redis instance.
  redis:
    enabled: false
    architecture: standalone
    auth:
      enabled: false # Do not disable this in production!
      password: ""
    master:
      podLabels:
        tags.datadoghq.com/service: authentik-redis
      persistentVolumeClaimRetentionPolicy:
        enabled: true
        whenScaled: Retain
        whenDeleted: Delete # default is 'Retain'
      persistence:
        enabled: true
