# Custom configmap for CoreDNS
# *.conf files are imported in the root zone block
# *.server files are imported in the server block
customConfigmap:
  custom.server: |
    # This empty placeholder prevents warnings about no matching import files.
  custom.conf: |
    # This empty placeholder prevents warnings about no matching import files.
#  verbose.conf: |
#    dump
#  NodeHosts.conf: |
#    hosts /etc/coredns/NodeHosts {
#      ttl 60
#      reload 15s
#      fallthrough
#    }


# Default values for coredns.
# When installing the chart on EKS, you can delete the old coredns by running:
# > kubectl delete deployment/coredns service/kube-dns service/coredns-metrics configmap/coredns configmap/coredns-custom pdb/coredns sa/coredns clusterrole/coredns clusterrole/coredns-extra clusterrolebinding/coredns clusterrolebinding/coredns-extra clusterrolebinding/system:coredns -n kube-system
# Then install this chart in the kube-system namespace.
# > helm upgrade --install coredns oci://ghcr.io/jimcronqvist/helm-charts/coredns -n kube-system

coredns:
  replicaCount: 2

  isClusterService: true

  #fullnameOverride: coredns

  service:
    name: "kube-dns"
    clusterIP: "172.20.0.10"   # AWS EKS
    # clusterIP: "10.43.0.10"  # k3s

    # To support legacy deployments using CoreDNS with the "k8s-app: kube-dns" label selectors.
    # See https://github.com/coredns/helm/blob/master/charts/coredns/README.md#adopting-existing-coredns-resources
    #selector:
    #  k8s-app: kube-dns

  # To support legacy deployments using CoreDNS with the "k8s-app: kube-dns" label selectors.
  # See https://github.com/coredns/helm/blob/master/charts/coredns/README.md#adopting-existing-coredns-resources
  #k8sAppLabelOverride: "kube-dns"

  priorityClassName: system-node-critical

  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 256Mi

  prometheus:
    service:
      enabled: true
    monitor:
      enabled: false

  serviceAccount:
    create: true

  servers:
    - zones:
        - zone: .
      port: 53
      plugins:
        - name: errors
        # Serves a /health endpoint on :8080, required for livenessProbe
        - name: health
          configBlock: |-
            lameduck 5s
        # Serves a /ready endpoint on :8181, required for readinessProbe
        - name: ready
        # Required to query kubernetes API for data
        - name: kubernetes
          parameters: cluster.local in-addr.arpa ip6.arpa
          configBlock: |-
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        # Serves a /metrics endpoint on :9153, required for serviceMonitor
        - name: prometheus
          parameters: 0.0.0.0:9153
        - name: forward
          parameters: . /etc/resolv.conf
        - name: cache
          parameters: 30
        - name: loop
        - name: reload
        - name: loadbalance
        - name: import
          parameters: /etc/coredns/custom/*.conf

  extraConfig:
    import:
      parameters: /etc/coredns/custom/*.server

  extraVolumes:
    - name: custom-config-volume
      configMap:
        name: coredns-custom # Note: This name does not use the release name
        defaultMode: 420
        optional: true
    #- name: node-hosts-file
    #  hostPath:
    #    path: /var/lib/rancher/k3s/server/manifests/coredns/NodeHosts

  extraVolumeMounts:
    - name: custom-config-volume
      readOnly: true
      mountPath: /etc/coredns/custom
    #- name: node-hosts-file
    #  mountPath: /etc/coredns/NodeHosts
    #  readOnly: true

  zoneFiles: []

  topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: '{{ template "coredns.name" . }}'
          app.kubernetes.io/instance: '{{ .Release.Name }}'
      topologyKey: topology.kubernetes.io/zone
      maxSkew: 1
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: '{{ template "coredns.name" . }}'
          app.kubernetes.io/instance: '{{ .Release.Name }}'
      topologyKey: kubernetes.io/hostname
      maxSkew: 1
      whenUnsatisfiable: ScheduleAnyway

  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists

  nodeSelector: {}

  podDisruptionBudget:
    maxUnavailable: 1

  rbac:
    create: true
    # Custom implementation in this chart only (not in coredns chart), used to add EKS required permissions as below
    extraRules:
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get"]

  env: []

  # Custom labels to apply to Deployment, Pod, Configmap, Service, ServiceMonitor. Including autoscaler if enabled.
  customLabels:
    tags.datadoghq.com/service: "coredns"
    tags.datadoghq.com/env: "production"
    goharbor.io/harbor-container-webhook-disable: "true"

  # Custom annotations to apply to Deployment, Pod, Configmap, Service, ServiceMonitor. Including autoscaler if enabled.
  customAnnotations: {}

