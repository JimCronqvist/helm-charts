{{- $fullName := include "microservice.fullname" . -}}

{{/* Dynamic computed values helper */}}
{{- define "computedConfig" -}}
{{- $proxy := .proxy }}
{{- $registry := .registry }}
{{- $fullName := .fullName }}

{{- $remoteUrl := $proxy.remoteUrl | default "https://registry-1.docker.io" }}
{{- $registryHost := (urlParse $remoteUrl).host }}
{{- if $registryHost }}
nameOverride: docker-registry-{{ $proxy.name }}

serviceAccount:
  create: false
  name: {{ $fullName }}

ingressroute:
  enabled: false

env:
  # Upstream proxy
  REGISTRY_PROXY_REMOTEURL: {{ $remoteUrl | quote }}
  {{- if $proxy.username }}
  REGISTRY_PROXY_USERNAME: {{ $proxy.username | quote }}
  {{- end }}

  {{- if $registry.s3.bucket }}
  # S3 driver
  REGISTRY_STORAGE_S3_REGION: {{ $registry.s3.region | quote }}
  REGISTRY_STORAGE_S3_BUCKET: {{ $registry.s3.bucket | quote }}
  REGISTRY_STORAGE_S3_ROOTDIRECTORY: "{{ $proxy.name }}/"

  {{- if and $registry.s3.accessKey $registry.s3.secretKey }}
  # S3 Auth
  REGISTRY_STORAGE_S3_ACCESSKEY: {{ $registry.s3.accessKey | quote }}
  REGISTRY_STORAGE_S3_SECRETKEY: {{ $registry.s3.secretKey | quote }}
  {{- end }}

  # MinIO
  {{- with $registry.s3.regionendpoint }}
  REGISTRY_STORAGE_S3_REGIONENDPOINT: {{ . | quote }}
  {{- end }}
  {{- if $registry.s3.forcepathstyle }}
  REGISTRY_STORAGE_S3_FORCEPATHSTYLE: true
  {{- end }}

  {{- else }}
  # Filesystem driver - when the PVC is enabled
  REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: "/mnt/registry/{{ $proxy.name }}"
  {{- end }}

  # Http prefix
  #REGISTRY_HTTP_PREFIX: "/{{ $proxy.name }}/"

  # Auth
  {{- if and (ne $proxy.auth "none") (or (ne $proxy.auth "transparent") (and $proxy.username $proxy.password)) }}
  REGISTRY_AUTH: htpasswd
  REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
  REGISTRY_AUTH_HTPASSWD_PATH: "/etc/docker/registry/.htpasswd"
  {{- end }}

secrets:
  {{- if $proxy.password }}
  REGISTRY_PROXY_PASSWORD: {{ $proxy.password | quote }}
  {{- end }}
  # Http secret, cryptographically unique, required when using multiple replicas.
  REGISTRY_HTTP_SECRET: {{ $registry.secret | default (randAlphaNum 32) }}

{{- if and (ne $proxy.auth "none") (or (ne $proxy.auth "transparent") (and $proxy.username $proxy.password)) }}
files:
  /etc/docker/registry/.htpasswd:
    content: |
      {{- if and (eq $proxy.auth "htpasswd") $proxy.authHtpasswd }}
      {{ required "You must provide proxy.authHtpasswd when proxy.auth is set to 'htpasswd'." $proxy.authHtpasswd }}
      {{- else if eq $proxy.auth "credentials" }}
      {{ htpasswd (required "proxy.authUsername is required!" $proxy.authUsername) (required "proxy.authPassword is required!" $proxy.authPassword) }}
      {{- else }}
      {{ htpasswd (required "proxy.username is required!" $proxy.username) (required "proxy.password is required" $proxy.password) }}
      {{- end }}
{{- end }}

{{- if or $proxy.ignoreRewriteForRegistryPod (contains "docker.io" ($proxy.remoteUrl | default "https://registry-1.docker.io")) }}
{{- with $registry.noRewritePodLabels }}
podLabels:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end }}

{{- end }}
{{- end }}

{{- range $proxy := .Values.registry.proxies }}
{{- $dynamicValues := fromYaml (include "computedConfig" (dict "proxy" $proxy "registry" $.Values.registry "fullName" $fullName )) }}
{{- $mergedValues := mergeOverwrite (deepCopy $.Values.microservice) $dynamicValues $.Values }}
{{- $context := set (deepCopy $) "Values" $mergedValues }}
---
{{- include "microservice.fullchart" $context }}
---
{{- end }}
