ingressroute:
  enabled: false
  routes:
    - path: /google
      host: oauth.localhost
      serviceName: oauth2-proxy
      servicePort: 80

oauth2-proxy:
  config:
    # Set to empty to autogenerate the name based on the deployment name
    cookieName: ""

    # Randomly generated key to protect the cookie, use:   openssl rand -base64 32 | head -c 32 | base64
    cookieSecret: ""

    # OAuth App settings
    clientID: "X"     # OAuth App Client ID
    clientSecret: "X" # OAuth App Client Secret

    google: {}
    extraArgs: {}

    authenticatedEmailsFile:
      enabled: false
      # List of email addresses that are allowed to access the site
      # restricted_access: |-
      #   email1@domain
      #   email2@domain

    # Set default values here, override them by using env vars rather than changing this configFile
    configFile: |-
      provider = "google"
      proxy_prefix = "/oauth2"
      oidc_issuer_url = "https://accounts.google.com"

      # You most likely want to change this to false if you want to use the full redirect url
      relative_redirect_url = true 
      #redirect_url = "https://oauth.example.com/oauth2/callback"
      
      #whitelist_domains = [ ".localhost" ]
      #cookie_domains = ".localhost"
      
      cookie_secure = true
      cookie_httponly = true
      cookie_samesite = ""
      cookie_refresh = "1h"
      cookie_expire = "168h"
      
      #cookie_csrf_per_request = true
      
      reverse_proxy = true
      show_debug_on_error = false
      silence_ping_logging = true
      force_https = false
      footer = "-"
      force_json_errors = false
      skip_auth_preflight = true
      upstreams = "static://202"
      
      # If you skip the provider button, you need to set the OAUTH2_PROXY_REDIRECT_URL in the extraEnv
      skip_provider_button = true
      #custom_sign_in_logo = "https://example.com/logo.png"
      
      email_domains = [ "*" ]
      #allowed_groups = [ "group1@google.com" ]

  # If true, OAUTH2_PROXY_CLIENT_ID, OAUTH2_PROXY_CLIENT_SECRET, OAUTH2_PROXY_COOKIE_SECRET will be set as secrets from the values.yaml.
  proxyVarsAsSecrets: true

  extraEnv:
    # Google
    - name: OAUTH2_PROXY_PROVIDER
      value: "google"

    # OpenID Connect (OIDC)
    #- name: OAUTH2_PROXY_PROVIDER
    #  value: "oidc"
    #- name: OAUTH2_PROXY_OIDC_ISSUER_URL
    #  value: "https://accounts.google.com"

    # GitHub
    #- name: OAUTH2_PROXY_PROVIDER
    #  value: "github"

    # Filters
    #- name: OAUTH2_PROXY_EMAIL_DOMAINS
    #  value: "<comma separated list of email domains to allow>"
    #- name: OAUTH2_PROXY_ALLOWED_EMAILS
    #  value: "<comma separated list of email addresses to allow>"

    # Extra settings
    #- name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
    #  value: "false"
    #- name: OAUTH2_PROXY_WHITELIST_DOMAINS
    #  value: "*.localhost,*.localhost:3000"
    #- name: OAUTH2_PROXY_COOKIE_DOMAINS
    #  value: ".localhost"

    # Redirect - If you skip the provider button, you most likely need to set the OAUTH2_PROXY_REDIRECT_URL
    #- name: OAUTH2_PROXY_REDIRECT_URL
    #  value: "https://oauth.example.com/oauth2/callback"

  sessionStorage:
    # Allowed values: redis|cookie
    type: cookie
    redis:
      password: ""
      standalone:
        connectionUrl: "" # redis://oauth2-proxy-redis:6379
